// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoTagger.Models;

#nullable disable

namespace VideoTagger.Migrations
{
    [DbContext(typeof(DbModel))]
    [Migration("20251016190019_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "10.0.0-rc.2.25502.107");

            modelBuilder.Entity("VideoTagger.Models.DbMisc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DatabaseVersion")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDirty")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Misc");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelCategoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BooleanRegex")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DbModelCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBoolean")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DbModelCategoryId");

                    b.HasIndex("CategoryId", "Name")
                        .IsUnique();

                    b.ToTable("CategoryItems");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelCategoryItemEnumValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DbModelCategoryItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnumValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Regex")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DbModelCategoryItemId");

                    b.HasIndex("CategoryItemId", "EnumValue")
                        .IsUnique();

                    b.ToTable("CategoryItemEnumValues");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelFolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("AlternativeNames")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelGroupMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("AlternativeNames")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DbModelGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DbModelGroupId");

                    b.HasIndex("GroupId", "Name")
                        .IsUnique();

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelVideoCaccheEntryTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DbModelVideoCacheEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VideoCacheEntryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DbModelVideoCacheEntryId");

                    b.HasIndex("MemberId");

                    b.HasIndex("VideoCacheEntryId", "MemberId")
                        .IsUnique();

                    b.ToTable("VideoCacheEntryTags");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelVideoCacheCoverImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("VideoCacheCoverImages");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelVideoCacheEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CoverImageId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CoverImageId");

                    b.HasIndex("Path")
                        .IsUnique();

                    b.ToTable("VideoCacheEntries");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelVideoCacheEntryTagItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("BooleanValue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DbModelVideoCaccheEntryTagId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EnumValueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VideoCacheEntryTagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DbModelVideoCaccheEntryTagId");

                    b.HasIndex("EnumValueId");

                    b.HasIndex("VideoCacheEntryTagId", "CategoryItemId")
                        .IsUnique();

                    b.ToTable("VideoCacheEntryTagItems");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelCategoryItem", b =>
                {
                    b.HasOne("VideoTagger.Models.DbModelCategory", null)
                        .WithMany("Items")
                        .HasForeignKey("DbModelCategoryId");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelCategoryItemEnumValue", b =>
                {
                    b.HasOne("VideoTagger.Models.DbModelCategoryItem", null)
                        .WithMany("EnumValues")
                        .HasForeignKey("DbModelCategoryItemId");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelGroupMember", b =>
                {
                    b.HasOne("VideoTagger.Models.DbModelGroup", null)
                        .WithMany("Members")
                        .HasForeignKey("DbModelGroupId");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelVideoCaccheEntryTag", b =>
                {
                    b.HasOne("VideoTagger.Models.DbModelVideoCacheEntry", null)
                        .WithMany("Tags")
                        .HasForeignKey("DbModelVideoCacheEntryId");

                    b.HasOne("VideoTagger.Models.DbModelGroupMember", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelVideoCacheEntry", b =>
                {
                    b.HasOne("VideoTagger.Models.DbModelVideoCacheCoverImage", "CoverImage")
                        .WithMany()
                        .HasForeignKey("CoverImageId");

                    b.Navigation("CoverImage");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelVideoCacheEntryTagItem", b =>
                {
                    b.HasOne("VideoTagger.Models.DbModelVideoCaccheEntryTag", null)
                        .WithMany("Items")
                        .HasForeignKey("DbModelVideoCaccheEntryTagId");

                    b.HasOne("VideoTagger.Models.DbModelCategoryItemEnumValue", "EnumValue")
                        .WithMany()
                        .HasForeignKey("EnumValueId");

                    b.Navigation("EnumValue");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelCategory", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelCategoryItem", b =>
                {
                    b.Navigation("EnumValues");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelGroup", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelVideoCaccheEntryTag", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("VideoTagger.Models.DbModelVideoCacheEntry", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
